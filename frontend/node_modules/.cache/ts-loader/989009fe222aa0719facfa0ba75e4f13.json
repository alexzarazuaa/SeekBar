{"remainingRequest":"/app/node_modules/babel-loader/lib/index.js!/app/node_modules/ts-loader/index.js??ref--14-2!/app/node_modules/eslint-loader/index.js??ref--13-0!/app/src/views/auth/utils/utils.ts","dependencies":[{"path":"/app/src/views/auth/utils/utils.ts","mtime":1620320501821},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/app/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/app/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIENoZWNrUmVnZXggPSBmdW5jdGlvbiBDaGVja1JlZ2V4KHJlZ0V4LCB0ZXh0KSB7CiAgcmV0dXJuIHJlZ0V4LnRlc3QodGV4dCkgPyB0cnVlIDogZmFsc2U7Cn07CgpleHBvcnQgdmFyIFJlZ2lzdGVyRm9ybUVycm9ycyA9IGZ1bmN0aW9uIFJlZ2lzdGVyRm9ybUVycm9ycyh2YWx1ZXMpIHsKICB2YXIgdHlwZXNFcnJvcnMgPSBbXTsKCiAgaWYgKCFDaGVja1JlZ2V4KC9eW2EtekEtWjAtOV17MywxNn0kLywgdmFsdWVzLnVzZXJuYW1lKSkgewogICAgdHlwZXNFcnJvcnMucHVzaCh7CiAgICAgIG5hbWU6ICd1c2VybmFtZScsCiAgICAgIHZhbHVlOiAnRWwgdXNlcm5hbWUgZXMgaW5jb3JyZWN0bycKICAgIH0pOwogIH0KCiAgaWYgKCFDaGVja1JlZ2V4KC9eW2EtekEtWjAtOS4hIyQlJicqKy89P15fYHt8fX4tXStAW2EtekEtWjAtOS1dKyg/OlwuW2EtekEtWjAtOS1dKykqJC8sIHZhbHVlcy5lbWFpbCkpIHsKICAgIGNvbnNvbGUubG9nKCJFTUFJTCBFUlJPUiIsIHZhbHVlcy5lbWFpbCk7CiAgICB0eXBlc0Vycm9ycy5wdXNoKHsKICAgICAgbmFtZTogJ2VtYWlsJywKICAgICAgdmFsdWU6ICdFbCBlbWFpbCBlcyBpbmNvcnJlY3RvJwogICAgfSk7CiAgfQoKICBpZiAoIUNoZWNrUmVnZXgoL15bYS16QS1aMC05XXszLDE2fSQvLCB2YWx1ZXMucGFzc3dvcmQpKSB7CiAgICB0eXBlc0Vycm9ycy5wdXNoKCJwYXNzd29yZCIpOwogIH0gZWxzZSBpZiAodmFsdWVzLnBhc3N3b3JkICE9PSB2YWx1ZXMucmVwZWF0UGFzc3dvcmQpIHsKICAgIHR5cGVzRXJyb3JzLnB1c2goewogICAgICBuYW1lOiAncmVwZWF0JywKICAgICAgdmFsdWU6ICdMYSBjb250cmFzZcOxYSBubyBlcyBpZ3VhbCcKICAgIH0pOwogIH0KCiAgcmV0dXJuIHR5cGVzRXJyb3JzOwp9OwpleHBvcnQgdmFyIExvZ2luRm9ybUVycm9ycyA9IGZ1bmN0aW9uIExvZ2luRm9ybUVycm9ycyh2YWx1ZXMpIHsKICB2YXIgdHlwZXNFcnJvcnMgPSBbXTsKCiAgaWYgKCFDaGVja1JlZ2V4KC9eW2EtekEtWjAtOV17MywxNn0kLywgdmFsdWVzLnVzZXJuYW1lKSkgewogICAgdHlwZXNFcnJvcnMucHVzaCh7CiAgICAgIG5hbWU6ICdsb2dfdXNlcm5hbWUnLAogICAgICB2YWx1ZTogJ0VsIHVzZXJuYW1lIGVzIGluY29ycmVjdG8nCiAgICB9KTsKICB9CgogIGlmICghQ2hlY2tSZWdleCgvXlthLXpBLVowLTldezMsMTZ9JC8sIHZhbHVlcy5wYXNzd29yZCkpIHsKICAgIHR5cGVzRXJyb3JzLnB1c2goewogICAgICBuYW1lOiAnbG9nX3Bhc3N3b3JkJywKICAgICAgdmFsdWU6ICdMYSBjb250cmFzZcOxYSBlcyBpbmNvcnJlY3RhJwogICAgfSk7CiAgfQoKICByZXR1cm4gdHlwZXNFcnJvcnM7Cn07"},{"version":3,"sources":["/app/node_modules/eslint-loader/index.js??ref--13-0!/app/src/views/auth/utils/utils.ts"],"names":[],"mappings":"AAAA,IAAM,UAAU,GAAG,SAAb,UAAa,CAAC,KAAD,EAAa,IAAb,EAA6B;AAC9C,SAAO,KAAK,CAAC,IAAN,CAAW,IAAX,IAAmB,IAAnB,GAA0B,KAAjC;AACD,CAFD;;AAIA,OAAO,IAAM,kBAAkB,GAAG,SAArB,kBAAqB,CAAC,MAAD,EAAgB;AAChD,MAAM,WAAW,GAAU,EAA3B;;AAEA,MAAI,CAAC,UAAU,CAAC,qBAAD,EAAwB,MAAM,CAAC,QAA/B,CAAf,EAAyD;AACvD,IAAA,WAAW,CAAC,IAAZ,CAAiB;AAAC,MAAA,IAAI,EAAE,UAAP;AAAmB,MAAA,KAAK,EAAC;AAAzB,KAAjB;AACD;;AAED,MAAI,CAAC,UAAU,CAAC,sEAAD,EAAwE,MAAM,CAAC,KAA/E,CAAf,EAAsG;AACpG,IAAA,OAAO,CAAC,GAAR,CAAY,aAAZ,EAA2B,MAAM,CAAC,KAAlC;AACA,IAAA,WAAW,CAAC,IAAZ,CAAiB;AAAC,MAAA,IAAI,EAAE,OAAP;AAAgB,MAAA,KAAK,EAAC;AAAtB,KAAjB;AACD;;AAED,MAAI,CAAC,UAAU,CAAC,qBAAD,EAAwB,MAAM,CAAC,QAA/B,CAAf,EAAyD;AACvD,IAAA,WAAW,CAAC,IAAZ,CAAiB,UAAjB;AACD,GAFD,MAEO,IAAI,MAAM,CAAC,QAAP,KAAoB,MAAM,CAAC,cAA/B,EAA+C;AACpD,IAAA,WAAW,CAAC,IAAZ,CAAiB;AAAC,MAAA,IAAI,EAAE,QAAP;AAAiB,MAAA,KAAK,EAAC;AAAvB,KAAjB;AACD;;AAED,SAAO,WAAP;AACD,CAnBM;AAsBP,OAAO,IAAM,eAAe,GAAG,SAAlB,eAAkB,CAAC,MAAD,EAAgB;AAC7C,MAAM,WAAW,GAAU,EAA3B;;AAEA,MAAI,CAAC,UAAU,CAAC,qBAAD,EAAwB,MAAM,CAAC,QAA/B,CAAf,EAAyD;AACvD,IAAA,WAAW,CAAC,IAAZ,CAAiB;AAAC,MAAA,IAAI,EAAE,cAAP;AAAuB,MAAA,KAAK,EAAC;AAA7B,KAAjB;AACD;;AAED,MAAI,CAAC,UAAU,CAAC,qBAAD,EAAwB,MAAM,CAAC,QAA/B,CAAf,EAAyD;AACvD,IAAA,WAAW,CAAC,IAAZ,CAAiB;AAAC,MAAA,IAAI,EAAE,cAAP;AAAuB,MAAA,KAAK,EAAC;AAA7B,KAAjB;AACD;;AAED,SAAO,WAAP;AACD,CAZM","sourcesContent":["const CheckRegex = (regEx: any, text: string) => {\n  return regEx.test(text) ? true : false;\n};\n\nexport const RegisterFormErrors = (values: any) => {\n  const typesErrors: any[] = [];\n\n  if (!CheckRegex(/^[a-zA-Z0-9]{3,16}$/, values.username)) {\n    typesErrors.push({name: 'username', value:'El username es incorrecto'});\n  }\n\n  if (!CheckRegex(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/,values.email)) {\n    console.log(\"EMAIL ERROR\", values.email);\n    typesErrors.push({name: 'email', value:'El email es incorrecto'});\n  }\n\n  if (!CheckRegex(/^[a-zA-Z0-9]{3,16}$/, values.password)) {\n    typesErrors.push(\"password\");\n  } else if (values.password !== values.repeatPassword) {\n    typesErrors.push({name: 'repeat', value:'La contraseña no es igual'});\n  }\n\n  return typesErrors ;\n};\n\n\nexport const LoginFormErrors = (values: any) => {\n  const typesErrors: any[] = [];\n\n  if (!CheckRegex(/^[a-zA-Z0-9]{3,16}$/, values.username)) {\n    typesErrors.push({name: 'log_username', value:'El username es incorrecto'});\n  }\n\n  if (!CheckRegex(/^[a-zA-Z0-9]{3,16}$/, values.password)) {\n    typesErrors.push({name: 'log_password', value:'La contraseña es incorrecta'});\n  }\n\n  return typesErrors ;\n};"],"sourceRoot":""}]}